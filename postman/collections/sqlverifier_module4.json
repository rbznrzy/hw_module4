{
	"info": {
		"_postman_id": "b7bca666-68e2-4e88-b265-3ba87125cf76",
		"name": "sqlverifier_module4",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "24763942-b7bca666-68e2-4e88-b265-3ba87125cf76"
	},
	"item": [
		{
			"name": "Registration",
			"item": [
				{
					"name": "Registration with valid data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "afe216f3-ba78-4223-b3be-39659ef76a7f"
							}
						}
					],
					"id": "dcc5b259-2388-4a24-80f4-9da089937b7a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\": \"{{$randomWord}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"langKey\": \"ru\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				}
			],
			"id": "377ee50b-d51e-4a7e-b5c4-03939fce61e7"
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Authenticate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Getting id_token\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id_token\");\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"pm.environment.set(\"id_token\", response.id_token);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "dc155925-035b-420f-beee-3f610d25862b"
							}
						}
					],
					"id": "45d536d9-7132-42c8-a582-86e366372fd0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{authPassword}}\",\r\n    \"rememberMe\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/authenticate",
							"host": [
								"{{url}}"
							],
							"path": [
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"    var response = pm.response.json();\r",
									"\r",
									"pm.test(\"Login checking\", function () {\r",
									"    pm.expect(response.login).to.eql(\"3hrsforsleep\");\r",
									"});\r",
									"\r",
									"pm.test(\"Email checking\", function () {\r",
									"    pm.expect(response.email).to.eql(\"rbznrzy@gmail.com\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.environment.set(\"userId\", response.id);\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "b8e82a2e-268f-407f-b373-45b96d0122ef"
							}
						}
					],
					"id": "1b9974d9-0f61-4edf-8859-33b3a2a7e49a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/account",
							"host": [
								"{{url}}"
							],
							"path": [
								"account"
							]
						}
					},
					"response": []
				}
			],
			"id": "41326d59-2061-4b53-84c9-c8979ea3e9e1"
		},
		{
			"name": "Login -  Sad Path",
			"item": [
				{
					"name": "Authenticate with unvalid data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Unauthorized\", function () {\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});\r",
									"\r",
									"pm.test(\"detail checking\", function () {\r",
									"    var responseTask = pm.response.json();\r",
									"    pm.expect(responseTask.detail).to.eql(\"Bad credentials\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "073bd4b1-9be5-44df-aba8-7e78d7a64d35"
							}
						}
					],
					"id": "7a2ffda7-872f-4a22-80ae-7377b86e5035",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"username\": \"{{$randomWord}}\",\r\n\"password\": \"{{$randomPassword}}\",\r\n\"rememberMe\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/authenticate",
							"host": [
								"{{url}}"
							],
							"path": [
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate with empty Username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has UBad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									"    var responseTask = pm.response.json();\r",
									"pm.test(\"detail checking\", function () {\r",
									"    pm.expect(responseTask.detail).to.eql(\"Unexpected runtime exception\");\r",
									"});\r",
									"pm.test(\"title checking\", function () {\r",
									"    pm.expect(responseTask.title).to.eql(\"Method argument not valid\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "fed34cdf-c0f3-4272-8d54-5d12f62702a8"
							}
						}
					],
					"id": "75349419-547c-42d8-9ca8-c3488c6b8339",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"username\": \"\",\r\n\"password\": \"{{$randomPassword}}\",\r\n\"rememberMe\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/authenticate",
							"host": [
								"{{url}}"
							],
							"path": [
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate with empty Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has UBad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									"    var responseTask = pm.response.json();\r",
									"pm.test(\"detail checking\", function () {\r",
									"    pm.expect(responseTask.detail).to.eql(\"Unexpected runtime exception\");\r",
									"});\r",
									"pm.test(\"title checking\", function () {\r",
									"    pm.expect(responseTask.title).to.eql(\"Method argument not valid\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "cce7e26f-caf3-4a7c-b317-4658ff5d6614"
							}
						}
					],
					"id": "e06cae4c-4230-4c4e-a87d-8100d0ae0bb9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"username\": \"{{$randomWord}}\",\r\n\"password\": \"\",\r\n\"rememberMe\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/authenticate",
							"host": [
								"{{url}}"
							],
							"path": [
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authtorization with random Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Unauthorized\", function () {\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "71087c65-09d3-4ba9-9c66-9509593a3494"
							}
						}
					],
					"id": "a17da9e7-4825-4250-83b1-fa87fa2676af",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{$randomBitcoin}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/account",
							"host": [
								"{{url}}"
							],
							"path": [
								"account"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authtorization without Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Unauthorized\", function () {\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "f855139a-e4b5-4115-bf38-174abc83f227"
							}
						}
					],
					"id": "8466c9d5-cf21-4fa4-9860-2c81ec7d0e25",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/account",
							"host": [
								"{{url}}"
							],
							"path": [
								"account"
							]
						}
					},
					"response": []
				}
			],
			"id": "ab5ba227-dca1-4f02-a1f5-53b3e95cdef3"
		},
		{
			"name": "Tasks - Happy Path",
			"item": [
				{
					"name": "Create Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"const taskResponse = pm.response.json();\r",
									"pm.environment.set(\"taskId\", taskResponse.id);\r",
									"pm.environment.set(\"taskText\", taskResponse.text);\r",
									"pm.environment.set(\"taskAnswer\", taskResponse.answer);\r",
									"pm.environment.set(\"taskTitle\", taskResponse.title);\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "e0fcc7fc-bfdf-4412-a908-067eedf3a3ca"
							}
						}
					],
					"id": "079f2bdd-fad5-4497-a0f7-7989090cc32d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"{{$randomWord}}\",\r\n    \"text\": \"{{$randomWords}}\",\r\n    \"answer\": \"{{$randomPhrase}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "561c6bc5-14b2-4c3a-8c16-f016b3fb3d62"
							}
						}
					],
					"id": "e3656b00-b1d2-4ae3-a4a4-28c71463822e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{taskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const taskResponse = pm.response.json();\r",
									"pm.environment.set(\"text\", taskResponse.text);\r",
									"pm.environment.set(\"answer\", taskResponse.answer);\r",
									"pm.environment.set(\"title\", taskResponse.title);\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "7eb711fc-4538-4c9d-a825-e3940c059a78"
							}
						}
					],
					"id": "35646c19-cae8-4b77-93a6-3cd8a2319f28",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{taskId}},\r\n    \"title\": \"{{$randomWord}}\",\r\n    \"text\": \"{{$randomWords}}\",\r\n    \"answer\": \"{{$randomPhrase}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{taskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "c0facbab-33a6-4512-a151-55a614f0891f"
							}
						}
					],
					"id": "58b816a1-89c8-42e4-9954-43c39fe096f6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{taskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Checking Deleted Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Not Found\", function () {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});\r",
									"\r",
									"pm.test(\"detail checking\", function () {\r",
									"    var responseTask = pm.response.json();\r",
									"    pm.expect(responseTask.detail).to.eql(\"404 NOT_FOUND\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "ec5e5ba2-e910-49b9-bb3c-4033ec96d4f7"
							}
						}
					],
					"id": "d1b9e6f6-fd21-40ea-96e2-acc9f68973bb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{taskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "4b866eca-6ed6-44ad-ae9a-3f906ca8b3fa"
		},
		{
			"name": "Tasks for .csv",
			"item": [
				{
					"name": "Create Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"const taskResponse = pm.response.json();\r",
									"pm.environment.set(\"taskId\", taskResponse.id);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "e02f0555-b228-4fcd-82fe-1d98ce974ba0"
							}
						}
					],
					"id": "2e7a498f-0c76-4a8a-9272-a260d05c05e3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"{{title}}\",\r\n    \"text\": \"{{text}}\",\r\n    \"answer\": \"{{answer}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "0130cde9-ab83-486f-80f4-118cd29ecf71"
							}
						}
					],
					"id": "82cc4943-7e60-453f-9682-6ace06218374",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{taskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "4014e410-f97b-41ed-996c-e97bc70c6021"
							}
						}
					],
					"id": "447cb435-c328-42bc-81f8-09423960e6e2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{taskId}},\r\n    \"title\": \"{{$randomWord}}\",\r\n    \"text\": \"{{$randomWords}}\",\r\n    \"answer\": \"{{$randomPhrase}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{taskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "dbbf9c32-bd3c-40df-afd5-711a9e3140da"
							}
						}
					],
					"id": "c6c02297-2666-4367-b793-8bfdd5b44967",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{taskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Checking Deleted Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Not Found\", function () {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});\r",
									"\r",
									"pm.test(\"detail checking\", function () {\r",
									"    var responseTask = pm.response.json();\r",
									"    pm.expect(responseTask.detail).to.eql(\"404 NOT_FOUND\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "814895de-531b-433f-80c2-b6a08c028ae0"
							}
						}
					],
					"id": "0b777551-e2e2-4fa7-b942-b112147a22c6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{taskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "fc89dc3c-2cff-4cd2-98c0-1f46c0b49716"
		},
		{
			"name": "Tasks - Sad Path",
			"item": [
				{
					"name": "Create Task without title",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									"    var responseTask = pm.response.json();\r",
									"pm.test(\"detail checking\", function () {\r",
									"    pm.expect(responseTask.detail).to.eql(\"Failure during data access\");\r",
									"});\r",
									"pm.test(\"title checking\", function () {\r",
									"    pm.expect(responseTask.title).to.eql(\"Internal Server Error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "c6ad8d13-6611-4d5a-b718-2fa342816ff1"
							}
						}
					],
					"id": "bb6ff024-9f43-4964-a192-a541e71244a4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"{{$randomWords}}\",\r\n    \"answer\": \"{{$randomPhrase}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Task without text",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									"    var responseTask = pm.response.json();\r",
									"pm.test(\"detail checking\", function () {\r",
									"    pm.expect(responseTask.detail).to.eql(\"Failure during data access\");\r",
									"});\r",
									"pm.test(\"title checking\", function () {\r",
									"    pm.expect(responseTask.title).to.eql(\"Internal Server Error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "b57e6c75-be06-4c0e-90bc-e10eca6331eb"
							}
						}
					],
					"id": "5fbe41b9-18a1-4d31-95dd-4df9bbf96030",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"{{$randomWord}}\",\r\n    \"answer\": \"{{$randomPhrase}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Task without answer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									"    var responseTask = pm.response.json();\r",
									"pm.test(\"detail checking\", function () {\r",
									"    pm.expect(responseTask.detail).to.eql(\"Failure during data access\");\r",
									"});\r",
									"pm.test(\"title checking\", function () {\r",
									"    pm.expect(responseTask.title).to.eql(\"Internal Server Error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "b57446a6-1de1-43f3-9fd8-33d44a6a887a"
							}
						}
					],
					"id": "b44b2e97-0cc6-4825-8281-55a66bc57541",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"{{$randomWord}}\",\r\n    \"text\": \"{{$randomWords}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task with random number in Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Not Found\", function () {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});\r",
									"\r",
									"    var responseTask = pm.response.json();\r",
									"pm.test(\"detail checking\", function () {\r",
									"    pm.expect(responseTask.detail).to.eql(\"404 NOT_FOUND\");\r",
									"});\r",
									"pm.test(\"title checking\", function () {\r",
									"    pm.expect(responseTask.title).to.eql(\"Not Found\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "e2e98c83-7c05-41aa-adb3-4dd1c6cb7ff7"
							}
						}
					],
					"id": "b14c57dd-2ed7-4448-8e95-d74e38e24adc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{$randomBankAccount}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{$randomBankAccount}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task with random word in Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "bacb9809-3c53-443b-b2ed-7bc800a56ce1"
							}
						}
					],
					"id": "4812f480-06bd-4fdb-b965-eca02f7d271b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{$randomWord}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{$randomWord}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "3d77268f-454e-4b4e-8b27-5278e665fb56"
		}
	]
}