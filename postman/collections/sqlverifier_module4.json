{
	"info": {
		"_postman_id": "4555ea09-fae9-4af0-8c75-78cc76e1c050",
		"name": "sqlverifier_module4",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "24763942-4555ea09-fae9-4af0-8c75-78cc76e1c050"
	},
	"item": [
		{
			"name": "Registration",
			"item": [
				{
					"name": "Registration with valid data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "f6873e1f-aea1-49cc-9a70-ace7ed2f585a"
							}
						}
					],
					"id": "a6b29477-1a08-4a72-b783-bcd4d63ffec4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\": \"{{$randomWord}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"langKey\": \"ru\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				}
			],
			"id": "8dfb38d2-28b6-4972-ace4-e6662b738bd7"
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Authenticate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Getting id_token\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id_token\");\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"pm.environment.set(\"id_token\", response.id_token);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "1cd436cf-a18e-43a2-8bd1-f719460bb31b"
							}
						}
					],
					"id": "24120265-e38c-4f6c-b20d-85c96678d73f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{authPassword}}\",\r\n    \"rememberMe\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/authenticate",
							"host": [
								"{{url}}"
							],
							"path": [
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"    var response = pm.response.json();\r",
									"\r",
									"pm.test(\"Login checking\", function () {\r",
									"    pm.expect(response.login).to.eql(\"3hrsforsleep\");\r",
									"});\r",
									"\r",
									"pm.test(\"Email checking\", function () {\r",
									"    pm.expect(response.email).to.eql(\"rbznrzy@gmail.com\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.environment.set(\"userId\", response.id);\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "6a0e3930-7d21-407d-b083-36199c9a8036"
							}
						}
					],
					"id": "4938be74-faf6-40ec-96c3-dab0c826fef6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/account",
							"host": [
								"{{url}}"
							],
							"path": [
								"account"
							]
						}
					},
					"response": []
				}
			],
			"id": "971bab28-5881-425b-a806-1f514b905a4f"
		},
		{
			"name": "Login -  Sad Path",
			"item": [
				{
					"name": "Authenticate with unvalid data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Unauthorized\", function () {\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});\r",
									"\r",
									"pm.test(\"detail checking\", function () {\r",
									"    var responseTask = pm.response.json();\r",
									"    pm.expect(responseTask.detail).to.eql(\"Bad credentials\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "a2d779c0-ef49-4e24-b905-ad00aee5938b"
							}
						}
					],
					"id": "645981f1-fc79-4258-b9ab-304f01f23877",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"username\": \"{{$randomWord}}\",\r\n\"password\": \"{{$randomPassword}}\",\r\n\"rememberMe\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/authenticate",
							"host": [
								"{{url}}"
							],
							"path": [
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate with empty Username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has UBad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									"    var responseTask = pm.response.json();\r",
									"pm.test(\"detail checking\", function () {\r",
									"    pm.expect(responseTask.detail).to.eql(\"Unexpected runtime exception\");\r",
									"});\r",
									"pm.test(\"title checking\", function () {\r",
									"    pm.expect(responseTask.title).to.eql(\"Method argument not valid\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "421c2132-f1b7-447a-8aff-d29665b2fc75"
							}
						}
					],
					"id": "5a17c6df-6a6f-45e6-8692-032ee6756ec4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"username\": \"\",\r\n\"password\": \"{{$randomPassword}}\",\r\n\"rememberMe\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/authenticate",
							"host": [
								"{{url}}"
							],
							"path": [
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate with empty Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has UBad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									"    var responseTask = pm.response.json();\r",
									"pm.test(\"detail checking\", function () {\r",
									"    pm.expect(responseTask.detail).to.eql(\"Unexpected runtime exception\");\r",
									"});\r",
									"pm.test(\"title checking\", function () {\r",
									"    pm.expect(responseTask.title).to.eql(\"Method argument not valid\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "6181ca97-4258-4c6a-94f0-c6fd5e23c17e"
							}
						}
					],
					"id": "b8a0bb59-e6a0-41c2-940f-03fdafab1b83",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"username\": \"{{$randomWord}}\",\r\n\"password\": \"\",\r\n\"rememberMe\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/authenticate",
							"host": [
								"{{url}}"
							],
							"path": [
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authtorization with random Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Unauthorized\", function () {\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "17f9b8ab-ef94-4a77-a4d2-1fb4e70af98f"
							}
						}
					],
					"id": "3647797a-a101-4bfe-aac9-47483761f435",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{$randomBitcoin}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/account",
							"host": [
								"{{url}}"
							],
							"path": [
								"account"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authtorization without Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Unauthorized\", function () {\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "e3b37e47-0eac-44e7-a4a5-fa1beb35f47a"
							}
						}
					],
					"id": "053630f4-3f7d-4d6e-84b9-52256fc30a6f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/account",
							"host": [
								"{{url}}"
							],
							"path": [
								"account"
							]
						}
					},
					"response": []
				}
			],
			"id": "31c94acc-8c8a-4d09-a4a3-1fd111124d67"
		},
		{
			"name": "Tasks - Happy Path",
			"item": [
				{
					"name": "Create Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"const taskResponse = pm.response.json();\r",
									"pm.environment.set(\"taskId\", taskResponse.id);\r",
									"pm.environment.set(\"taskText\", taskResponse.text);\r",
									"pm.environment.set(\"taskAnswer\", taskResponse.answer);\r",
									"pm.environment.set(\"taskTitle\", taskResponse.title);\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "6c5ddbcb-edf3-44ae-b202-1e17c4950011"
							}
						}
					],
					"id": "e9755d71-9430-4053-931c-3721b1c78add",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"{{$randomWord}}\",\r\n    \"text\": \"{{$randomWords}}\",\r\n    \"answer\": \"{{$randomPhrase}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "cc1db1e9-1e4e-439b-a517-07edf9068dca"
							}
						}
					],
					"id": "ff7c8da4-82bc-42e8-8600-9b9504a7c3bd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{taskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const taskResponse = pm.response.json();\r",
									"pm.environment.set(\"text\", taskResponse.text);\r",
									"pm.environment.set(\"answer\", taskResponse.answer);\r",
									"pm.environment.set(\"title\", taskResponse.title);\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "35edaf87-e475-46c8-b557-9c06d20c6342"
							}
						}
					],
					"id": "1d8761e6-7468-4e8c-a136-aa644f526e32",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{taskId}},\r\n    \"title\": \"{{$randomWord}}\",\r\n    \"text\": \"{{$randomWords}}\",\r\n    \"answer\": \"{{$randomPhrase}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{taskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "6d84630f-9e7b-4cab-a512-3c47a0712a2b"
							}
						}
					],
					"id": "89aef71b-df97-406e-9005-956316456112",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{taskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Checking Deleted Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Not Found\", function () {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});\r",
									"\r",
									"pm.test(\"detail checking\", function () {\r",
									"    var responseTask = pm.response.json();\r",
									"    pm.expect(responseTask.detail).to.eql(\"404 NOT_FOUND\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "d041ce74-a901-456b-b502-842084ddde51"
							}
						}
					],
					"id": "6e8c9a40-a9ec-4f50-b14a-66a3283128a7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{taskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "10f647a7-c95a-4333-b81a-160b193c3b45"
		},
		{
			"name": "Tasks for .csv",
			"item": [
				{
					"name": "Create Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"const taskResponse = pm.response.json();\r",
									"pm.environment.set(\"taskId\", taskResponse.id);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "25fa2770-4630-40df-8843-babdcee43bb8"
							}
						}
					],
					"id": "7a0b12cf-dfa2-4375-b08f-33607f1ab019",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"{{title}}\",\r\n    \"text\": \"{{text}}\",\r\n    \"answer\": \"{{answer}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "bb51fb1a-7f65-44ea-a651-b42732342c0c"
							}
						}
					],
					"id": "f7729b97-c6da-4d50-a542-ed3b7d8eb710",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{taskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "05d302f7-b377-4095-9a17-e91d014539a9"
							}
						}
					],
					"id": "39879b73-6ca9-4fcb-8649-1fc749cc98d8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{taskId}},\r\n    \"title\": \"{{$randomWord}}\",\r\n    \"text\": \"{{$randomWords}}\",\r\n    \"answer\": \"{{$randomPhrase}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{taskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "df90f6e7-5c13-4cdc-9a93-207b2ceaf882"
							}
						}
					],
					"id": "cc8a58fb-db3f-4161-be77-842ac246593a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{taskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Checking Deleted Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Not Found\", function () {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});\r",
									"\r",
									"pm.test(\"detail checking\", function () {\r",
									"    var responseTask = pm.response.json();\r",
									"    pm.expect(responseTask.detail).to.eql(\"404 NOT_FOUND\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "7e77b00c-bac5-4801-8fd6-2d920033bb96"
							}
						}
					],
					"id": "c012af03-f9b1-4ad6-81a0-754c0910b7b3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{taskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "3a6fef08-c0bf-494f-ba53-3e81f3b991e3"
		},
		{
			"name": "Tasks - Sad Path",
			"item": [
				{
					"name": "Create Task without title",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									"    var responseTask = pm.response.json();\r",
									"pm.test(\"detail checking\", function () {\r",
									"    pm.expect(responseTask.detail).to.eql(\"Failure during data access\");\r",
									"});\r",
									"pm.test(\"title checking\", function () {\r",
									"    pm.expect(responseTask.title).to.eql(\"Internal Server Error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "e8b82a5b-e466-4601-9877-4d689dcae05b"
							}
						}
					],
					"id": "149aabea-caaa-4125-957b-6816cd1a2d3d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"{{$randomWords}}\",\r\n    \"answer\": \"{{$randomPhrase}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Task without text",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									"    var responseTask = pm.response.json();\r",
									"pm.test(\"detail checking\", function () {\r",
									"    pm.expect(responseTask.detail).to.eql(\"Failure during data access\");\r",
									"});\r",
									"pm.test(\"title checking\", function () {\r",
									"    pm.expect(responseTask.title).to.eql(\"Internal Server Error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "f759aab5-1a69-4635-8dff-8a7a5f19c16b"
							}
						}
					],
					"id": "bd62b0f1-1ba0-46e0-9c61-ee5a48a34aa5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"{{$randomWord}}\",\r\n    \"answer\": \"{{$randomPhrase}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Task without answer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Internal Server Error\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									"    var responseTask = pm.response.json();\r",
									"pm.test(\"detail checking\", function () {\r",
									"    pm.expect(responseTask.detail).to.eql(\"Failure during data access\");\r",
									"});\r",
									"pm.test(\"title checking\", function () {\r",
									"    pm.expect(responseTask.title).to.eql(\"Internal Server Error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "2c85bb27-a981-4b58-9acc-a82d95beb2bb"
							}
						}
					],
					"id": "c65ce867-4877-464d-ac12-669360e4c635",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"{{$randomWord}}\",\r\n    \"text\": \"{{$randomWords}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task with random number in Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Not Found\", function () {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});\r",
									"\r",
									"    var responseTask = pm.response.json();\r",
									"pm.test(\"detail checking\", function () {\r",
									"    pm.expect(responseTask.detail).to.eql(\"404 NOT_FOUND\");\r",
									"});\r",
									"pm.test(\"title checking\", function () {\r",
									"    pm.expect(responseTask.title).to.eql(\"Not Found\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "7c2a1feb-97d7-4a8d-851b-9097348c745c"
							}
						}
					],
					"id": "e5091416-5c89-4410-b6ef-46cf9a98f9b7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{$randomBankAccount}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{$randomBankAccount}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task with random word in Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "87667929-795f-446e-aec9-c53f3dcfc488"
							}
						}
					],
					"id": "bd550291-5b1f-487e-8008-d48a7a54a9fc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{id_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/{{$randomWord}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"{{$randomWord}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "1c6e7654-f2c7-476d-9443-07964354492f"
		}
	]
}